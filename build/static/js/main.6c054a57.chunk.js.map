{"version":3,"sources":["redux/auth/operations.js","redux/auth/selectors.js","redux/contacts/slice.js","redux/contacts/actions.js","routes/PrivateRoute.js","routes/PublicRoute.js","App/App.js","redux/contacts/reducers.js","redux/auth/slice.js","redux/store.js","index.js"],"names":["BASE_URL","register","createAsyncThunk","user","a","rejectWithValue","fetch","method","headers","body","JSON","stringify","response","json","data","error","message","login","logout","_","getState","state","token","auth","Authorization","currentUser","console","log","getIsAuth","isAuth","getUserName","name","getIsFetchingCurrent","isFetchingCurrentUser","getToken","phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchPhonebook","query","providesTags","addContact","mutation","newContact","url","invalidatesTags","deleteContact","contactId","useFetchPhonebookQuery","useDeleteContactMutation","useAddContactMutation","setFilter","createAction","PrivateRoute","Contacts","component","to","PublicRoute","Component","useSelector","Header","lazy","HomeView","LoginView","RegisterView","ContactsView","App","dispatch","useDispatch","isFetchingCurrent","useEffect","className","fallback","type","color","height","width","path","element","autoClose","filterReducer","createReducer","actions","payload","contactsReducer","combineReducers","filter","authSlice","createSlice","initialState","email","isLoading","extraReducers","pending","action","fulfilled","rejected","contactsPersistConfig","key","storage","whitelist","blacklist","authPersistConfig","authPersistReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"2TAEMA,EAAQ,wCAEDC,EAAWC,YACpB,gBADoC,uCAEpC,WAAOC,EAAP,sBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE+BC,MAAM,GAAD,OAAIN,EAAJ,iBAA6B,CACrDO,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUR,KALjC,cAEcS,EAFd,gBAO2BA,EAASC,OAPpC,cAOcC,EAPd,yBAQeA,GARf,kCAUQT,EAAgB,CAAEU,MAAO,KAAIC,UAVrC,0DAFoC,yDAgB3BC,EAAQf,YACjB,aADiC,uCAEjC,WAAOC,EAAP,sBAAAC,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE+BC,MAAM,GAAD,OAAIN,EAAJ,gBAA4B,CACpDO,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUR,KALjC,cAEcS,EAFd,gBAO2BA,EAASC,OAPpC,cAOcC,EAPd,yBAQWA,GARX,kCAUQT,EAAgB,CAAEU,MAAO,KAAIC,UAVrC,0DAFiC,yDAgBxBE,EAAShB,YAClB,cADkC,uCAElC,WAAOiB,EAAP,wBAAAf,EAAA,yDAAYC,EAAZ,EAAYA,gBAAiBe,EAA7B,EAA6BA,SACnBC,EAAQD,IACRE,EAAQD,EAAME,KAAKD,MAF7B,0EAKchB,MAAM,GAAD,OAAIN,EAAJ,iBAA6B,CACpCO,OAAQ,OACRC,QAAS,CAAEgB,cAAc,UAAD,OAAYF,MAPhD,yDAUQjB,EAAgB,KAAIW,SAV5B,0DAFkC,yDAgBzBS,EAAcvB,YACvB,mBADuC,uCAEvC,WAAOiB,EAAP,4BAAAf,EAAA,yDAAYC,EAAZ,EAAYA,gBAAiBe,EAA7B,EAA6BA,SACnBC,EAAQD,IACRE,EAAQD,EAAME,KAAKD,MAF7B,0EAK+BhB,MAAM,GAAD,OAAIN,EAAJ,kBAA8B,CACtDQ,QAAS,CAACgB,cAAc,UAAD,OAAYF,MAN/C,cAKcV,EALd,iBAQ2BA,EAASC,OARpC,eAQcC,EARd,OASQY,QAAQC,IAAIb,GATpB,kBAUeA,GAVf,kCAYIT,EAAgB,KAAIW,SAZxB,0DAFuC,0D,gCCpD3C,wIAAO,IAAMY,EAAY,SAAAP,GAAK,OAAIA,EAAME,KAAKM,QAEhCC,EAAc,SAAAT,GAAK,OAAIA,EAAME,KAAKpB,KAAK4B,MAEvCC,EAAuB,SAAAX,GAAK,OAAIA,EAAME,KAAKU,uBAE3CC,EAAW,SAAAb,GAAK,OAAIA,EAAME,KAAKD,Q,gCCN5C,4JAEaa,EAAeC,YAAU,CAClCC,YAAa,eAEbC,UAAWC,YAAe,CAAEC,QAAS,uDACrCC,SAAU,CAAC,WACXC,UAAW,SAAAC,GAEP,OADAjB,QAAQC,IAAI,UAAUgB,GACf,CACHC,eAAgBD,EAAQE,MAAM,CAC1BA,MAAO,iBAAM,aACbC,aAAc,CAAC,aAGfC,WAAYJ,EAAQK,SAAS,CACzBH,MAAO,SAAAI,GAAU,MAAK,CAClBC,IAAK,YACL3C,OAAQ,OACRE,KAAMwC,IAGVE,gBAAiB,CAAC,aAGlBC,cAAeT,EAAQK,SAAS,CAC5BH,MAAO,SAAAQ,GAAS,MAAK,CACjBH,IAAI,aAAD,OAAeG,GAClB9C,OAAQ,WAGZ4C,gBAAiB,CAAC,iBAStCG,EAGAnB,EAHAmB,uBACAC,EAEApB,EAFAoB,yBACAC,EACArB,EADAqB,uB,gCCzCJ,6CAeaC,EAAYC,YAAa,e,yKCd/B,SAASC,EAAT,GAAwD,IAAhC9B,EAA+B,EAA/BA,OAAmB+B,EAAY,EAAvBC,UAGrC,OAFAnC,QAAQC,IAAI,aAAaiC,GAGvB,mCACG/B,EAAS,cAAC+B,EAAD,IAAe,cAAC,IAAD,CAAUE,GAAG,a,mBCFrC,SAASC,EAAT,GAAgD,IAAdC,EAAa,EAAxBH,UACtBhC,EAASoC,YAAYrC,KAG3B,OAFAF,QAAQC,IAAI,SAASqC,GAGnB,mCACGnC,EAAS,cAAC,IAAD,CAAUiC,GAAG,cAAiB,cAACE,EAAD,M,oBCIxCE,EAASC,gBAAK,kBAAM,gCACpBC,EAAWD,gBAAK,kBAAM,gCACtBE,EAAYF,gBAAK,kBAAM,gCACvBG,EAAgBH,gBAAK,kBAAM,gCAC3BI,EAAgBJ,gBAAK,kBAAM,gCAmClBK,I,IAAAA,EAjCf,WAGE,IAAMC,EAAWC,cACX7C,EAASoC,YAAYrC,KACrBN,EAAQ2C,YAAY/B,KACpByC,EAAoBV,YAAYjC,KAQtC,OANA4C,qBAAU,WACRtD,GAASmD,EAAShD,iBACjB,CAACgD,IAKF,sBAAKI,UAAU,MAAf,UACI,eAAC,WAAD,CAAUC,SAAW,cAAC,IAAD,CAAQC,KAAK,YAAYC,MAAM,OAAOC,OAAQ,GAAIC,MAAO,KAA9E,UACI,cAAChB,EAAD,CAAQrC,OAAQA,IAClB8C,EACE,cAAC,IAAD,CAAQI,KAAK,YAAYC,MAAM,OAAOC,OAAQ,GAAIC,MAAO,KACzD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACrB,EAAD,CAAalC,OAAQA,EAAQgC,UAAWO,MACjE,cAAC,IAAD,CAAOe,KAAK,SAASC,QAAS,cAACrB,EAAD,CAAalC,OAAQA,EAAQgC,UAAWQ,MACtE,cAAC,IAAD,CAAOc,KAAK,YAAYC,QAAS,cAACrB,EAAD,CAAalC,OAAQA,EAAQgC,UAAWS,MACzE,cAAC,IAAD,CAAOa,KAAK,YAAYC,QAAS,cAACzB,EAAD,CAAc9B,OAAQA,EAAQgC,UAAWU,YAIlF,cAAC,IAAD,CAAgBc,UAAW,U,6CChC3BC,EAAgBC,YAAc,GAAD,eAC9B9B,KAAY,SAACpC,EAAOmE,GAAR,OAAoBA,EAAQC,YAsB9BC,EALSC,YAAgB,CAEpCC,OAAQN,I,gDCqDGO,EA9EGC,YAAY,CAC5B/D,KAAM,OACNgE,aAXmB,CACjB5F,KAAM,CAAE4B,KAAM,KAAMiE,MAAO,MAC3B1E,MAAO,KACPW,uBAAuB,EACvBlB,MAAO,KACPkF,WAAW,EACXpE,QAAQ,GAMRqE,eAAa,mBAEZjG,IAASkG,SAFG,SAEM9E,EAAO+E,GACtB,OAAO,2BAAI/E,GAAX,IAAkB4E,WAAW,OAHpB,cAKZhG,IAASoG,WALG,SAKQhF,EAAO+E,GACxB,OAAO,2BACA/E,GADP,IAEIlB,KAAMiG,EAAOX,QAAQtF,KACrBmB,MAAO8E,EAAOX,QAAQnE,MACtBW,uBAAuB,EACvBJ,QAAQ,EACRoE,WAAW,OAZN,cAeZhG,IAASqG,UAfG,SAeOjF,EAAO+E,GACvB,OAAO,2BAAI/E,GAAX,IAAkB4E,WAAW,EAAOlF,MAAOqF,EAAOX,aAhBzC,cAmBZxE,IAAMkF,SAnBM,SAmBG9E,GACZ,OAAO,2BAAIA,GAAX,IAAkB4E,WAAW,OApBpB,cAsBZhF,IAAMoF,WAtBM,SAsBKhF,EAAO+E,GACrB,OAAO,2BACA/E,GADP,IAEIlB,KAAMiG,EAAOX,QAAQtF,KACrBmB,MAAO8E,EAAOX,QAAQnE,MACtBO,QAAQ,EACRoE,WAAW,OA5BN,cA+BZhF,IAAMqF,UA/BM,SA+BIjF,EAAO+E,GACpB,OAAO,2BAAI/E,GAAX,IAAkB4E,WAAW,EAAOlF,MAAOqF,EAAOX,aAhCzC,cAmCZvE,IAAOiF,SAnCK,SAmCI9E,GACb,OAAO,2BAAIA,GAAX,IAAkB4E,WAAW,OApCpB,cAsCZ/E,IAAOmF,WAtCK,SAsCMhF,GACf,OAAO,2BACAA,GADP,IAEIlB,KAAM,CAAE4B,KAAM,KAAMiE,MAAO,MAC3B1E,MAAO,KACP2E,WAAW,EACXpE,QAAQ,OA5CH,cA+CZX,IAAOoF,UA/CK,SA+CKjF,EAAO+E,GACrB,OAAO,2BAAI/E,GAAX,IAAkB4E,WAAW,EAAOlF,MAAOqF,EAAOX,aAhDzC,cAmDZhE,IAAY0E,SAnDA,SAmDS9E,GAClB,OAAO,2BAAIA,GAAX,IAAkB4E,WAAW,EAAMhE,uBAAuB,OApDjD,cAsDZR,IAAY4E,WAtDA,SAsDWhF,EAAO+E,GAC3B,OAAO,2BACA/E,GADP,IAEIlB,KAAMiG,EAAOX,QACbxD,uBAAuB,EACvBgE,WAAW,EACXpE,QAAQ,OA5DH,cA+DZJ,IAAY6E,UA/DA,SA+DUjF,EAAO+E,GAC1B,OAAO,2BACA/E,GADP,IAEI4E,WAAW,EACXlF,MAAOqF,EAAOX,QACdxD,uBAAuB,EACvBJ,QAAQ,OArEH,KA2EjB,QCtEM0E,EAAwB,CAC5BC,IAAK,YACHC,YACAC,UAAW,GACXC,UAAW,CAAC,WAEVC,EAAoB,CACxBJ,IAAK,YACLC,YACAC,UAAW,CAAC,UAGRG,EAAqBC,YAAeF,EAAmBG,GAEvDC,EAAU,sBACTC,YACC,CAACC,kBAAmB,CAChBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHtD,CAMZtF,IAAa6E,aAIXU,EAAQC,YAAe,CACzBC,SAAO,GACHC,SAAUf,YAAeP,EAAuBb,IAD7C,cAGFvD,IAAaE,YAAcF,IAAayF,SAHtC,qBAIGf,GAJH,GAMPG,eASW,GAAEU,QAAOI,UALNC,YAAaL,I,QC7C/BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaS,QAAQ,GAAGL,UAAWJ,EAAMI,UAAzC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRM,SAASC,eAAe,W","file":"static/js/main.6c054a57.chunk.js","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst BASE_URL = `https://connections-api.herokuapp.com`;\n\nexport const register = createAsyncThunk(\n    \"auth/register\",\n    async (user, { rejectWithValue }) => {\n        try {\n            const response = await fetch(`${BASE_URL}/users/signup`, {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\",},\n                body: JSON.stringify(user),\n            });\n            const data = await response.json();\n            return data;\n        } catch (err) {\n            rejectWithValue({ error: err.message });\n        }\n    }\n);\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async (user, { rejectWithValue }) => {\n        try {\n            const response = await fetch(`${BASE_URL}/users/login`, {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\",},\n                body: JSON.stringify(user),\n            });\n            const data = await response.json();\n        return data;\n        } catch (err) {\n            rejectWithValue({ error: err.message });\n        }\n    }\n);\nexport const logout = createAsyncThunk(\n    \"auth/logout\",\n    async (_, { rejectWithValue, getState }) => {\n        const state = getState();\n        const token = state.auth.token;\n        if (!token) return;\n        try {\n            await fetch(`${BASE_URL}/users/logout`, {\n                method: \"POST\",\n                headers: { Authorization: `Bearer ${token}` },\n            });\n        } catch (err) {\n            rejectWithValue(err.message);\n        }\n    }\n);\nexport const currentUser = createAsyncThunk(\n    \"auth/currentUser\",\n    async (_, { rejectWithValue, getState }) => {\n        const state = getState();\n        const token = state.auth.token;\n        if (!token) return;\n        try {\n            const response = await fetch(`${BASE_URL}/users/current`, {\n                headers: {Authorization: `Bearer ${token}`,},\n            });\n            const data = await response.json();\n            console.log(data);\n            return data;\n        } catch (err) {\n        rejectWithValue(err.message);\n    }\n  }\n);\n","export const getIsAuth = state => state.auth.isAuth;\n\nexport const getUserName = state => state.auth.user.name;\n\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nexport const getToken = state => state.auth.token;\n\n// const authSelectors = {\n//     getIsAuth,\n//     getUserName,\n//     getIsFetchingCurrent,\n//     getToken,\n// };\n// export default authSelectors;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const phonebookApi = createApi({\n    reducerPath: 'phonebookApi',\n    // baseQuery: fetchBaseQuery({ baseUrl: 'https://connections-api.herokuapp.com' }),\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://619d65ca131c600017088eee.mockapi.io/api/v1' }),\n    tagTypes: ['Contact'],\n    endpoints: builder => {\n        console.log('builder',builder);\n        return {\n            fetchPhonebook: builder.query({\n                query: () => '/contacts',\n                providesTags: ['Contact'],\n                // headers: (token)=>({Authorization: `Bearer ${createApi.getState().auth.token}`,})\n            }),\n                addContact: builder.mutation({\n                    query: newContact => ({\n                        url: '/contacts',\n                        method: 'POST',\n                        body: newContact,\n                        // headers: {Authorization: `Bearer ${store.auth.token}`,}\n                    }),\n                    invalidatesTags: ['Contact'],\n                    // headers: (token)=>({Authorization: `Bearer ${createApi.getState().auth.token}`,})\n                }),\n                    deleteContact: builder.mutation({\n                        query: contactId => ({\n                            url: `/contacts/${contactId}`,\n                            method: 'DELETE',\n                            // headers: {Authorization: `Bearer ${store.auth.token}`,}\n                        }),\n                        invalidatesTags: ['Contact'],\n                    }),\n        }\n    }\n    \n    ,\n});\n\nexport const {\n    useFetchPhonebookQuery,\n    useDeleteContactMutation,\n    useAddContactMutation\n} = phonebookApi;","\nimport { createAction } from '@reduxjs/toolkit';\n\n\n// export const addContactRequest = createAction('contacts/addContactRequest');\n// export const addContactSuccess = createAction('contacts/addContactSuccess');\n// export const addContactError = createAction('contacts/addContactError');\n\n// export const deleteContactRequest = createAction('contacts/deleteContactRequest');\n// export const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\n// export const deleteContactError = createAction('contacts/deleteContactError');\n\n// export const fetchContactsRequest = createAction('contacts/fetchContactRequest');\n// export const fetchContactsSuccess = createAction('contacts/fetchContactSuccess');\n// export const fetchContactsError = createAction('contacts/fetchContactError');\n\nexport const setFilter = createAction('filter/set');\n\n","import { Navigate } from \"react-router-dom\";\n\nexport function PrivateRoute({ isAuth, component: Contacts }) {\n  console.log('privetrout',Contacts)\n  \n  return (\n    <>\n      {isAuth ? <Contacts /> : <Navigate to=\"/login\" />}\n    </>\n  );\n}","import { Navigate } from \"react-router-dom\";\nimport { getIsAuth } from \"../redux/auth/selectors\";\nimport { useSelector } from 'react-redux';\n\n\nexport function PublicRoute({ component: Component }) {\n  const isAuth = useSelector(getIsAuth);\n  console.log('public',Component)\n  \n  return (\n    <>\n      {isAuth ? <Navigate to=\"/contacts\" /> : <Component />}\n    </>\n  );\n}","import React from 'react';\nimport './App.css';\nimport Loader from \"react-loader-spinner\";\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport { PrivateRoute } from \"../routes/PrivateRoute\";\nimport { PublicRoute } from \"../routes/PublicRoute\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {currentUser} from '../redux/auth/operations'\nimport { useEffect } from 'react';\nimport { lazy, Suspense } from 'react';\nimport { getIsAuth } from '../redux/auth/selectors';\nimport { getToken } from '../redux/auth/selectors';\nimport { getIsFetchingCurrent } from '../redux/auth/selectors';\nimport { ToastContainer } from 'react-toastify';\n\nconst Header = lazy(() => import('../components/Header/Header' /* webpackChunkName: \"header-view\" */));\nconst HomeView = lazy(() => import('../views/HomeView/HomeView' /* webpackChunkName: \"home-view\" */));\nconst LoginView = lazy(() => import('../views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */));\nconst RegisterView  = lazy(() => import('../views/RegisterView/RegisterView' /* webpackChunkName: \"register-view\" */));\nconst ContactsView  = lazy(() => import('../views/ContactsView/ContactsView' /* webpackChunkName: \"contacts-view\" */))\n\nfunction App() {\n\n  \n  const dispatch = useDispatch();\n  const isAuth = useSelector(getIsAuth);\n  const token = useSelector(getToken);\n  const isFetchingCurrent = useSelector(getIsFetchingCurrent);\n  // console.log(isAuth);\n  useEffect(() => {\n    token && dispatch(currentUser()); \n  }, [dispatch]);\n  \n  \n  \n  return (\n    <div className=\"app\">\n        <Suspense fallback={ <Loader type=\"ThreeDots\" color=\"blue\" height={80} width={80} />}>\n            <Header isAuth={isAuth}/>\n        {(isFetchingCurrent)\n          ? <Loader type=\"ThreeDots\" color=\"blue\" height={80} width={80} />\n          : <Routes>\n              <Route path=\"/\" element={<PublicRoute isAuth={isAuth} component={HomeView} />} />\n              <Route path=\"/login\" element={<PublicRoute isAuth={isAuth} component={LoginView} />} />\n              <Route path=\"/register\" element={<PublicRoute isAuth={isAuth} component={RegisterView} />} />\n              <Route path=\"/contacts\" element={<PrivateRoute isAuth={isAuth} component={ContactsView} />} />\n          </Routes>}\n      </Suspense>\n      \n      <ToastContainer autoClose={2000} />\n      </div>\n    );\n}\n\nexport default App;\n","\nimport { combineReducers } from 'redux';\nimport {setFilter} from './actions';\nimport { createReducer } from '@reduxjs/toolkit';\n// import {\n//     fetchContacts,\n//     addContact,\n//     deleteContact\n// } from './operations';\n\n\n// const itemsReducer = createReducer(initialContacts, {\n//     [fetchContacts.fulfilled]: (_, {payload}) => payload,\n//     [addContact.fulfilled]: (state, {payload}) => [...state, payload],\n//     [deleteContact.fulfilled]: (state, {payload}) => state.filter(({id}) => id !== payload.id)\n// });\n\nconst filterReducer = createReducer('', {\n    [setFilter]: (state, actions) => actions.payload\n});\n\n// const loading = createReducer(false, {\n//     [addContactRequest]: () => true,\n//     [addContactSuccess]: () => false,\n//     [addContactError]: () => false,\n//     [deleteContactRequest]: () => true,\n//     [deleteContactSuccess]: () => false,\n//     [deleteContactError]: () => false,\n// [fetchContacts.pending]: () => true\n// });\n\n// const error = createReducer(null, {\n// [fetchContacts.rejected]: (_, {payload}) => payload\n// });\n\nconst contactsReducer = combineReducers({\n    // items: itemsReducer,\n    filter: filterReducer\n});\n\nexport default contactsReducer;","import { createSlice } from '@reduxjs/toolkit';\nimport {register, login, logout, currentUser} from './operations';\n\nconst initialState = {\n    user: { name: null, email: null },\n    token: null,\n    isFetchingCurrentUser: false,\n    error: null,\n    isLoading: false,\n    isAuth: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n    extraReducers: {\n\n    [register.pending](state, action) {\n        return {...state, isLoading: true,};\n    },\n    [register.fulfilled](state, action) {\n        return {\n            ...state,\n            user: action.payload.user,\n            token: action.payload.token,\n            isFetchingCurrentUser: false,\n            isAuth: true,\n            isLoading: false,\n        };\n    },\n    [register.rejected](state, action) {\n        return {...state, isLoading: false, error: action.payload};\n    },\n    \n    [login.pending](state) {\n        return {...state, isLoading: true,};\n    },\n    [login.fulfilled](state, action) {\n        return {\n            ...state,\n            user: action.payload.user,\n            token: action.payload.token,\n            isAuth: true,\n            isLoading: false,\n        };\n    },\n    [login.rejected](state, action) {\n        return {...state, isLoading: false, error: action.payload};\n    },\n    \n    [logout.pending](state) {\n        return {...state, isLoading: true};\n    },\n    [logout.fulfilled](state) {\n        return {\n            ...state,\n            user: { name: null, email: null },\n            token: null,\n            isLoading: false,\n            isAuth: false,\n        };\n    },\n    [logout.rejected](state, action) {\n        return {...state, isLoading: false, error: action.payload};\n    },\n\n    [currentUser.pending](state) {\n        return {...state, isLoading: true, isFetchingCurrentUser: true};\n    },\n    [currentUser.fulfilled](state, action) {\n        return {\n            ...state,\n            user: action.payload,\n            isFetchingCurrentUser: false,\n            isLoading: false,\n            isAuth: true,\n        };\n    },\n    [currentUser.rejected](state, action) {\n        return {\n            ...state,\n            isLoading: false,\n            error: action.payload,\n            isFetchingCurrentUser: false,\n            isAuth: false,\n        };\n    },\n  },\n});\n\nexport default authSlice.reducer;","// import { composeWithDevTools } from 'redux-devtools-extension';\n// import { createStore } from 'redux';\n// import { combineReducers } from 'redux';\nimport contactsReducer from './contacts/reducers';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistReducer,\n    persistStore,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport { phonebookApi } from './contacts/slice';\nimport authReducer from './auth/slice';\n\nconst contactsPersistConfig = {\n  key: 'phonebook',\n    storage,\n    whitelist: [],\n    blacklist: ['filter']\n}\nconst authPersistConfig = {\n  key: \"authToken\",\n  storage,\n  whitelist: ['token'],\n};\n\nconst authPersistReducer = persistReducer(authPersistConfig, authReducer);\n\nconst middleware = [\n    ...getDefaultMiddleware(\n        {serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n        }}\n    ),\n    phonebookApi.middleware,\n    // logger\n];\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\n        // contacts: contactsReducer,\n        [phonebookApi.reducerPath]: phonebookApi.reducer,\n        auth: authPersistReducer,\n    },\n    middleware,\n    // devTools: process.env.MODE.ENV === 'development'\n});\n\nconst persistor = persistStore(store);\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading=\"\" persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}