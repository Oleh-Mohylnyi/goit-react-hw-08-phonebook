{"version":3,"sources":["components/Filter/filter.module.scss","components/ListItem/listItem.module.scss","components/List/list.module.scss","components/Form/form.module.scss","redux/contacts/selectors.js","components/Filter/Filter.js","components/ListItem/ListItem.js","components/List/List.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","components/Form/Form.js","components/Modal/Modal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","views/ContactsView/ContactsView.js"],"names":["module","exports","getContactsFilter","state","contacts","filter","Filter","useSelector","dispatch","useDispatch","className","s","label","type","name","input","pattern","title","autoComplete","onChange","e","setFilter","target","value","ListItem","contact","backgroundColorItem","statusCheckbox","phone","id","useDeleteContactMutation","deleteContact","isLoading","classNameBtn","style","item","contactSpan","disabled","onClick","List","useState","editCheckbox","setEditCheckbox","filtredContacts","toLowerCase","includes","filterContacts","classNameCheckbox","indexOf","backgroundColor","contactsList","hidden","checked","list","map","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","result","Super","NewTarget","this","arguments","apply","Form","setName","number","setNumber","useAddContactMutation","addContact","useFetchPhonebookQuery","data","handleChange","saveForm","find","alert","test","form","required","btn","preventDefault","modalRoot","document","querySelector","Modal","subClass","superClass","create","protoProps","staticProps","handleKeydown","code","closeModal","handleOverlay","event","currentTarget","window","addEventListener","removeEventListener","createPortal","Component","ContactsView","showModal","setShowModal","isFetching","toggleModal","color","height","width"],"mappings":"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","file":"static/js/contacts-view.bb1cf1fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__2WOpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"listItem_item__2JuYC\",\"btn_delete\":\"listItem_btn_delete__2Xwpv\",\"contactSpan\":\"listItem_contactSpan__2GjW_\",\"hidden-visually\":\"listItem_hidden-visually__2xXfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"list_contactsList__3BTPw\",\"list\":\"list_list__2XsKn\",\"hidden\":\"list_hidden__1L9AM\",\"checkboxEdit\":\"list_checkboxEdit__34l5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__oKlKm\",\"label\":\"form_label__14Gtg\",\"input\":\"form_input__1ucsV\",\"btn\":\"form_btn__20OJ1\"};","\nexport const getContactsFilter = state => state.contacts.filter;","import React from \"react\";\nimport s from './filter.module.scss'\nimport {setFilter} from '../../redux/contacts/actions';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from \"react-redux\";\nimport { getContactsFilter } from '../../redux/contacts/selectors';\n\n\nexport default function Filter() {\n    const filter = useSelector(getContactsFilter);\n    const dispatch = useDispatch();\n    \n    const handleChange = (e) => dispatch(setFilter(e.target.value));\n\n    return (\n        <label className={s.label}>\n            Find contacts by name\n            <input\n                type=\"text\"\n                name=\"filter\"\n                className={s.input}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                autoComplete=\"off\"\n                onChange={handleChange}\n                value={filter}>\n            </input>\n        </label>\n    );\n}\n\n","import React from \"react\";\nimport s from './listItem.module.scss'\nimport PropTypes from 'prop-types'\nimport { useDeleteContactMutation } from \"../../redux/contacts/slice\";\n\nexport default function ListItem({\n    contact,\n    backgroundColorItem,\n    statusCheckbox }) {\n\n    const { name, phone, id } = contact\n    const [deleteContact, {isLoading}] = useDeleteContactMutation();\n\n\n    let classNameBtn = 'btn_delete'\n    if (!statusCheckbox) {\n        classNameBtn += ' hidden'\n    }\n\n    return (\n        <li\n            style={backgroundColorItem}\n            className={s.item}>\n            <div className={s.contactSpan}>\n                <div>\n                <span>{name} </span>\n                </div>\n                <span>{phone} </span>\n            </div>\n            <button\n                disabled={isLoading}\n                type=\"button\"\n                className={classNameBtn}\n                onClick={() => deleteContact(id)}>\n                {!isLoading ? 'Delete' : 'Deleting...'}\n            </button>\n        </li>\n        )\n}\n\nListItem.propTypes = {\n    backgroundColorItem: PropTypes.object,\n    deleteContact: PropTypes.func,\n    statusCheckbox: PropTypes.bool,\n    contact: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n    })\n    }","import React, { useState } from \"react\";\nimport ListItem from \"../ListItem/ListItem\";\nimport s from './list.module.scss';\nimport { useSelector } from 'react-redux';\n\n\n\nexport default function List({ contacts }) {\n    const [editCheckbox, setEditCheckbox] = useState(false)\n\n    const filter = useSelector(state => state.contacts.filter);\n    \n\n    const filterContacts = (contacts, filter) => {\n        if (contacts) {\n            return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        } else {return []}\n    }\n    const filtredContacts = filterContacts(contacts, filter)\n    \n    let classNameCheckbox = 'checkboxEdit';\n    if (editCheckbox) {\n    classNameCheckbox += ' checkboxEditActive'\n    };\n\n    const backgroundColorItem = contact =>\n        filtredContacts.indexOf(contact) % 2 === 0\n            ? { backgroundColor: 'transparent' }\n            : { backgroundColor: 'white' };\n\n    return (\n        <div className={s.contactsList}>\n\n            <label className={classNameCheckbox}>\n                Edit\n                <input\n                    type=\"checkbox\"\n                    className={s.hidden}\n                    checked={editCheckbox}\n                    onChange={() => setEditCheckbox(!editCheckbox)}\n                />\n            </label>\n            <ul className={s.list}>\n                {filtredContacts &&\n                    filtredContacts.map(contact =>\n                        <ListItem\n                            key={contact.id}\n                            contact={contact}\n                            backgroundColorItem={backgroundColorItem(contact)}\n                            statusCheckbox={editCheckbox}\n                        />\n                    )}\n            </ul>\n        </div>\n    );\n}\n\n\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import React, { useState } from \"react\";\nimport s from './form.module.scss';\nimport { useAddContactMutation, useFetchPhonebookQuery } from \"../../redux/contacts/slice\";\n\n\nexport default function Form() {\n    \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const [addContact] = useAddContactMutation();\n    const { data: contacts } = useFetchPhonebookQuery();\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if (name === 'name') {\n            setName(value)\n        };\n        if (name === 'number') {\n            setNumber(value)\n        };\n    };\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        saveForm(name, number);\n        setName('');\n        setNumber('');\n    };\n\n    const saveForm = (name, number) => {\n    \n        const regNumber = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n        const regName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n        \n        if (!contacts) {\n            addContact({ name, number })\n        } else {\n            if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n                alert(`${name} is already in contacts`);\n            } else {\n                if (name === '' || number === '') {\n                    alert(\"Do not save contact without a name or number\");\n                } else {\n                    if (!regName.test(name)) {\n                        alert(\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\");\n                    } else {\n                        if (!regNumber.test(number)) {\n                            alert(\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\");\n                        } else {\n                            addContact({ name, number });\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    return (\n        <form className={s.form}>\n\n            <label className={s.label}> Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                    value={name}\n                    className={s.input}\n                />\n            </label>\n            <br />\n            <label className={s.label}> Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    autoComplete=\"off\"\n                    onChange={handleChange}\n                    value={number}\n                    className={s.input}\n                />\n            </label>\n            <br />\n            <button\n                type=\"submit\"\n                className={s.btn}\n                onClick={handleSubmit}>\n                Add contact\n            </button>\n            \n        </form>\n    );\n}\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport Form from '../Form/Form';\nimport './modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeydown)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeydown)\n    }\n    \n    handleKeydown = e => {\n        if (e.code === 'Escape') {\n                this.props.closeModal()\n            }\n    }\n\n    handleOverlay = event => {\n        if (event.currentTarget === event.target) {\n            this.props.closeModal()\n        }\n    }\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\"\n                onClick={this.handleOverlay}>\n              <div className=\"Modal\">\n                <Form/>\n              </div>\n            </div>,\n            modalRoot\n        )\n    }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import { useFetchPhonebookQuery } from '../../redux/contacts/slice'\nimport Loader from \"react-loader-spinner\";\nimport Filter from '../../components/Filter';\nimport List from '../../components/List'\nimport { useState } from 'react';\nimport Modal from '../../components/Modal/Modal'\n\nexport default function ContactsView() {\n\n    const [showModal, setShowModal] = useState(false)\n    const { data: contacts, isFetching } = useFetchPhonebookQuery();\n\n    const toggleModal = () => {\n        setShowModal(!showModal);\n    }\n    \n    return (\n    <>\n        {isFetching && <Loader type=\"ThreeDots\" color=\"blue\" height={80} width={80} />}\n    \n        {contacts && contacts.length > 0\n            ? (<>\n                <h2>Contacts</h2>\n                <button\n                    type=\"button\"\n                    onClick={() => toggleModal()}>\n                        Add contact\n                </button>\n                <Filter />\n                    <List contacts={contacts}/>\n            </>)\n            : (<p>no contacts at the moment</p>)\n            }\n        {showModal && <Modal\n          closeModal={toggleModal} />}\n    </>\n)\n}"],"sourceRoot":""}